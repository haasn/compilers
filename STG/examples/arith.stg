false = \ -> <0> ;
true  = \ -> <1> ;

zero = \ -> <0> ;
succ = \n -> <1> n ;

add = \x y ->
  case x of {
    <0>   -> y

    <1> n ->
      let addny = @ add n y
      in  succ addny
  };

eq = \x y ->
  case x of {
    <0>   -> case y of {
      <0>   -> true
      <1> m -> false }

    <1> n -> case y of {
      <0>   -> false
      <1> m -> eq n m }
  };

toInt = \x ->
  case x of {
    <0>   -> #0
    <1> n -> let tn = \ -> toInt n
             in + #1 tn
  };

one   = @ succ zero ;
two   = @ succ one  ;
three = @ succ two  ;

main = \ ->
  let addtt = @ add three two
  in  toInt addtt
