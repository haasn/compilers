nil  = \ -> <0> ;
cons = \x xs -> <1> x xs ;

mul = \x y -> * x y ;

map = \f l ->
  case l of {
    <0> -> l

    <1> x xs -> let fx  = @ f x      ;
                    mfx = @ map f xs
		in <1> fx mfx
  };

sum = \l ->
  case l of {
    <0> -> #0

    <1> x xs ->
      let sxs = \ -> sum xs
      in + x sxs
  };

main = \ -> let
    x3 = @ cons #3 nil ;
    x2 = @ cons #2 x3  ;
    xs = @ cons #1 x2  ;
    m2 = \ -> mul #2   ;
    mx = @ map m2 xs
  in sum mx
